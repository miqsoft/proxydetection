tasks:
  - host: relay
    task:
      name: Restart OpenVPN service
      systemd:
        name: "openvpn-server@server"
        state: restarted
  - host: client
    task:
      name: Ensure OpenVPN client service is enabled and started
      systemd:
        name: "openvpn-client@client"
        enabled: yes
        state: restarted
      become: yes

  - host: client
    task:
      name: "Pause briefly to ensure tunnel is started"
      pause:
        seconds: 5

  - host: client
    task:
      name: Verify OpenVPN connection status
      shell: "systemctl status openvpn-client@client > /output/openvpn_status.txt"
      register: openvpn_status
      changed_when: false
      become: yes

  - host: client
    task:
      name: Save OpenVPN status
      include_tasks: "commands/fetch_and_empty.yml"
      vars:
        src: "/output/openvpn_status.txt"
        dst: "{{ log_dir }}/openvpn_status.txt"
      become: yes

  - host: client
    task:
      name: Verify network interfaces
      shell: "ip a > /output/ip_a.txt"
      register: ip_a
      changed_when: false
      become: yes

  - host: client
    task:
      name: Save network interfaces
      include_tasks: "commands/fetch_and_empty.yml"
      vars:
        src: "/output/ip_a.txt"
        dst: "{{ log_dir }}/ip_a.txt"
      become: yes

  - host: all
    task:
      name: Start Network Captures (data only)
      include_tasks: "commands/pcap_start.yml"
      vars:
        file: "data_capture_{{ inventory_hostname }}.pcap"
        log: "data_capture_{{ inventory_hostname }}.log"